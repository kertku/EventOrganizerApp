// <auto-generated />
using System;
using DAL.App.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.App.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220710200814_InitialDbCreation")]
    partial class InitialDbCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("Domain.App.BusinessUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RegistryCode")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BusinessUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb039692-33ee-471c-9557-fb6be382ca20"),
                            CompanyName = "Tublitöö As",
                            RegistryCode = 77443382
                        },
                        new
                        {
                            Id = new Guid("3d8589e7-611a-41a7-82ee-5f219f3a98b3"),
                            CompanyName = "Kõva Kate OÜ",
                            RegistryCode = 77443382
                        },
                        new
                        {
                            Id = new Guid("001fa73d-b8bc-43b9-8eeb-27b9ee620c30"),
                            CompanyName = "Teeme Tööd OÜ",
                            RegistryCode = 77443382
                        },
                        new
                        {
                            Id = new Guid("b9489ff2-db80-422c-8efe-e80669995863"),
                            CompanyName = "Testiminse AS",
                            RegistryCode = 77443382
                        });
                });

            modelBuilder.Entity("Domain.App.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Information")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb0cb587-cc48-44be-9775-a018950284e8"),
                            Date = new DateTime(2022, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "Osad räägivad, teised kuulavad.",
                            Location = "Ärimajas",
                            Name = "Suvine seminar"
                        },
                        new
                        {
                            Id = new Guid("df193f93-645b-43bd-ab50-c616783483a7"),
                            Date = new DateTime(2022, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "Osad räägivad, teised kuulavad.",
                            Location = "Linnahall",
                            Name = "Eilene üritus"
                        },
                        new
                        {
                            Id = new Guid("cbd46e44-1ea9-42f7-bd50-5b652ba49333"),
                            Date = new DateTime(2022, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "Saame kokku ja kuulame",
                            Location = "Metsas",
                            Name = "Suvepäevad"
                        },
                        new
                        {
                            Id = new Guid("49bce2c5-23ee-43ff-8515-3a0a9e942bca"),
                            Date = new DateTime(2022, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Information = "Tasub kindlasti tulla kõigil.",
                            Location = "Aia 33, Tallinn",
                            Name = "Juhi sünnipäev"
                        });
                });

            modelBuilder.Entity("Domain.App.IndividualUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("IdentificationCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Information")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IndividualUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35410fb4-d254-4e56-a95c-de9916f7c329"),
                            FirstName = "Kaupe",
                            IdentificationCode = 46611110222L,
                            Information = "tubli",
                            LastName = "Kask"
                        },
                        new
                        {
                            Id = new Guid("66c335c4-9e91-4215-bcaf-ffee063b3f90"),
                            FirstName = "Piia",
                            IdentificationCode = 46311110222L,
                            Information = "Infot palju ei ole",
                            LastName = "Tulp"
                        },
                        new
                        {
                            Id = new Guid("324cadc2-325f-4e79-8dc4-3498d56a1f85"),
                            FirstName = "Aivar",
                            IdentificationCode = 46411110222L,
                            Information = "test",
                            LastName = "Roos"
                        },
                        new
                        {
                            Id = new Guid("29f372f1-2b00-4e7a-8c60-f2fc05657f6e"),
                            FirstName = "Kalle",
                            IdentificationCode = 46111110222L,
                            Information = "test",
                            LastName = "Sinilill"
                        });
                });

            modelBuilder.Entity("Domain.App.Participation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("BusinessUserId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("IndividualUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Information")
                        .HasMaxLength(5000)
                        .HasColumnType("TEXT");

                    b.Property<int?>("NumberOfParticipants")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PaymentTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUserId");

                    b.HasIndex("EventId");

                    b.HasIndex("IndividualUserId");

                    b.HasIndex("PaymentTypeId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("Domain.App.PaymentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68cd8f67-28fb-4c0f-8313-e85382f9f58c"),
                            PaymentTypeName = "Kaardimakse"
                        },
                        new
                        {
                            Id = new Guid("7b0bc0f9-1ff6-4058-b6fc-92c7e070eb65"),
                            PaymentTypeName = "Sularaha"
                        });
                });

            modelBuilder.Entity("Domain.App.Participation", b =>
                {
                    b.HasOne("Domain.App.BusinessUser", "BusinessUser")
                        .WithMany("Participations")
                        .HasForeignKey("BusinessUserId");

                    b.HasOne("Domain.App.Event", "Event")
                        .WithMany("Participations")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.App.IndividualUser", "IndividualUser")
                        .WithMany("Participations")
                        .HasForeignKey("IndividualUserId");

                    b.HasOne("Domain.App.PaymentType", "PaymentType")
                        .WithMany("Participations")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessUser");

                    b.Navigation("Event");

                    b.Navigation("IndividualUser");

                    b.Navigation("PaymentType");
                });

            modelBuilder.Entity("Domain.App.BusinessUser", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("Domain.App.Event", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("Domain.App.IndividualUser", b =>
                {
                    b.Navigation("Participations");
                });

            modelBuilder.Entity("Domain.App.PaymentType", b =>
                {
                    b.Navigation("Participations");
                });
#pragma warning restore 612, 618
        }
    }
}
